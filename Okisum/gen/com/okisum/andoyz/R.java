/* AUTO-GENERATED FILE.  DO NOT MODIFY.
 *
 * This class was automatically generated by the
 * aapt tool from the resource data it found.  It
 * should not be modified by hand.
 */

package com.okisum.andoyz;

public final class R {
    public static final class array {
        /**  Time span edit options that appear when editing system playlist "Recently added" 
 Used to indicate the number of weeks the "recently added" playlist covers in a selector widget 
         */
        public static final int weeklist=0x7f0a0000;
    }
    public static final class attr {
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int circleBackground=0x7f010000;
        /** <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>East</code></td><td>0</td><td></td></tr>
<tr><td><code>South</code></td><td>90</td><td></td></tr>
<tr><td><code>West</code></td><td>180</td><td></td></tr>
<tr><td><code>North</code></td><td>270</td><td></td></tr>
</table>
         */
        public static final int firstChildPosition=0x7f010001;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int isRotating=0x7f010003;
        /** <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int name=0x7f010005;
        /** <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int rotateToCenter=0x7f010002;
        /** <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
         */
        public static final int speed=0x7f010004;
    }
    public static final class color {
        public static final int appwidget_text=0x7f060000;
        /**  Do not translate. Background color for currently dragged item in playlist edit mode. 
         */
        public static final int dragndrop_background=0x7f060002;
        /**  Do not translate. Background color for albums in the artists list view. 
         */
        public static final int expanding_child_background=0x7f060003;
        public static final int tab_indicator_text=0x7f060004;
        public static final int transparent=0x7f060001;
    }
    public static final class dimen {
        /**  height of an expanded list item in edit playlist mode 
         */
        public static final int expanded_height=0x7f070001;
        /**  height of a normal list item in edit playlist mode 
         */
        public static final int normal_height=0x7f070000;
    }
    public static final class drawable {
        public static final int album_border_large=0x7f020000;
        public static final int albumart_mp_unknown=0x7f020001;
        public static final int albumart_mp_unknown_list=0x7f020002;
        public static final int app_music=0x7f020003;
        public static final int app_video=0x7f020004;
        public static final int appwidget_bg=0x7f020005;
        public static final int appwidget_button_center=0x7f020006;
        public static final int appwidget_button_left=0x7f020007;
        public static final int appwidget_button_right=0x7f020008;
        public static final int appwidget_divider=0x7f020009;
        public static final int appwidget_inner_focus_c=0x7f02000a;
        public static final int appwidget_inner_focus_l=0x7f02000b;
        public static final int appwidget_inner_focus_r=0x7f02000c;
        public static final int appwidget_inner_press_c=0x7f02000d;
        public static final int appwidget_inner_press_l=0x7f02000e;
        public static final int appwidget_inner_press_r=0x7f02000f;
        public static final int btn_nowplaying_background_small=0x7f020010;
        public static final int btn_playback_ic_pause_small=0x7f020011;
        public static final int btn_playback_ic_play_small=0x7f020012;
        public static final int btn_playback_small_normal=0x7f020013;
        public static final int btn_playback_small_pressed=0x7f020014;
        public static final int btn_playback_small_selected=0x7f020015;
        public static final int buttonbar_active=0x7f020016;
        public static final int buttonbar_focused=0x7f020017;
        public static final int buttonbar_inactive=0x7f020018;
        public static final int buttonbar_pressed=0x7f020019;
        public static final int buttonbarbackground=0x7f02001a;
        public static final int ic_appwidget_music_next=0x7f02001b;
        public static final int ic_appwidget_music_pause=0x7f02001c;
        public static final int ic_appwidget_music_play=0x7f02001d;
        public static final int ic_launcher=0x7f02001e;
        public static final int ic_launcher_shortcut_music_playlist=0x7f02001f;
        public static final int ic_menu_clear_playlist=0x7f020020;
        public static final int ic_menu_delete=0x7f020021;
        public static final int ic_menu_eq=0x7f020022;
        public static final int ic_menu_music_library=0x7f020023;
        public static final int ic_menu_party_shuffle=0x7f020024;
        public static final int ic_menu_play_clip=0x7f020025;
        public static final int ic_menu_set_as_ringtone=0x7f020026;
        public static final int ic_menu_shuffle=0x7f020027;
        public static final int ic_mp_album_playback=0x7f020028;
        public static final int ic_mp_artist_list=0x7f020029;
        public static final int ic_mp_artist_playback=0x7f02002a;
        public static final int ic_mp_current_playlist_btn=0x7f02002b;
        public static final int ic_mp_partyshuffle_on_btn=0x7f02002c;
        public static final int ic_mp_playlist_list=0x7f02002d;
        public static final int ic_mp_playlist_recently_added_list=0x7f02002e;
        public static final int ic_mp_repeat_all_btn=0x7f02002f;
        public static final int ic_mp_repeat_off_btn=0x7f020030;
        public static final int ic_mp_repeat_once_btn=0x7f020031;
        public static final int ic_mp_sd_card=0x7f020032;
        public static final int ic_mp_shuffle_off_btn=0x7f020033;
        public static final int ic_mp_shuffle_on_btn=0x7f020034;
        public static final int ic_mp_song_list=0x7f020035;
        public static final int ic_mp_song_playback=0x7f020036;
        public static final int ic_search_category_music_song=0x7f020037;
        public static final int ic_slide_keyboard=0x7f020038;
        public static final int ic_tab_albums=0x7f020039;
        public static final int ic_tab_albums_selected=0x7f02003a;
        public static final int ic_tab_albums_unselected=0x7f02003b;
        public static final int ic_tab_artists=0x7f02003c;
        public static final int ic_tab_artists_selected=0x7f02003d;
        public static final int ic_tab_artists_unselected=0x7f02003e;
        public static final int ic_tab_playback=0x7f02003f;
        public static final int ic_tab_playback_selected=0x7f020040;
        public static final int ic_tab_playback_unselected=0x7f020041;
        public static final int ic_tab_playlists=0x7f020042;
        public static final int ic_tab_playlists_selected=0x7f020043;
        public static final int ic_tab_playlists_unselected=0x7f020044;
        public static final int ic_tab_songs=0x7f020045;
        public static final int ic_tab_songs_selected=0x7f020046;
        public static final int ic_tab_songs_unselected=0x7f020047;
        public static final int icon_chordvar=0x7f020048;
        public static final int icon_credits=0x7f020049;
        public static final int icon_exit=0x7f02004a;
        public static final int icon_nowplay=0x7f02004b;
        public static final int icon_songlib=0x7f02004c;
        public static final int icon_tips=0x7f02004d;
        public static final int indicator_ic_mp_playing_large=0x7f02004e;
        public static final int indicator_ic_mp_playing_list=0x7f02004f;
        public static final int list_selector=0x7f020050;
        public static final int list_selector_background=0x7f020051;
        public static final int list_selector_background_transition=0x7f020052;
        public static final int midi=0x7f020053;
        public static final int movie=0x7f020054;
        public static final int music_bottom_playback_bg=0x7f020055;
        public static final int now_playing_progress_handle_normal=0x7f020056;
        public static final int now_playing_progress_handle_pressed=0x7f020057;
        public static final int now_playing_progress_handle_selected=0x7f020058;
        public static final int panel_now_playing_progress_bg=0x7f020059;
        public static final int pickerbox_background=0x7f02005a;
        public static final int pickerbox_selected=0x7f02005b;
        public static final int pickerbox_unselected=0x7f02005c;
        public static final int playlist_tile=0x7f02005d;
        public static final int playlist_tile_drag=0x7f02005e;
        public static final int playlist_tile_longpress=0x7f02005f;
        public static final int playlist_tile_normal=0x7f020060;
        public static final int playlist_tile_pressed=0x7f020061;
        public static final int playlist_tile_selected=0x7f020062;
        public static final int progress72=0x7f020063;
        public static final int progress72_bg=0x7f020064;
        public static final int progress_bar_bg=0x7f020065;
        public static final int progress_bar_full=0x7f020066;
        public static final int progress_horizontal=0x7f020067;
        public static final int scrubber_control_disabled_holo=0x7f020068;
        public static final int scrubber_control_focused_holo=0x7f020069;
        public static final int scrubber_control_normal_holo=0x7f02006a;
        public static final int scrubber_control_pressed_holo=0x7f02006b;
        public static final int seek_thumb=0x7f02006c;
        public static final int stat_notify_musicplayer=0x7f02006d;
    }
    public static final class id {
        public static final int East=0x7f050000;
        public static final int North=0x7f050003;
        public static final int RelativeLayout1=0x7f050032;
        public static final int South=0x7f050001;
        public static final int West=0x7f050002;
        public static final int album=0x7f050011;
        public static final int album_appwidget=0x7f05000c;
        public static final int albumname=0x7f050013;
        public static final int albumtab=0x7f050026;
        public static final int artist=0x7f05000e;
        public static final int artistalbum=0x7f050042;
        public static final int artistname=0x7f050012;
        public static final int artisttab=0x7f050025;
        public static final int buttonbar=0x7f050024;
        public static final int cancel=0x7f05002f;
        public static final int cancelButton=0x7f05003a;
        public static final int control_next=0x7f050010;
        public static final int control_play=0x7f05000f;
        public static final int create=0x7f050031;
        public static final int curplaylist=0x7f050017;
        public static final int currenttime=0x7f050018;
        public static final int delete=0x7f05002e;
        public static final int duration=0x7f05003c;
        public static final int icon=0x7f050036;
        public static final int imageView1=0x7f050033;
        public static final int lblListHeader=0x7f05002b;
        public static final int lblListItem=0x7f05002c;
        public static final int line1=0x7f050021;
        public static final int line2=0x7f050022;
        public static final int listContainer=0x7f050038;
        public static final int loading=0x7f05001e;
        public static final int lvExp=0x7f05002a;
        public static final int main_chordvar_image=0x7f050008;
        public static final int main_circle_layout=0x7f050004;
        public static final int main_credits_image=0x7f05000a;
        public static final int main_exit_image=0x7f05000b;
        public static final int main_nowplay_image=0x7f050007;
        public static final int main_selected_textView=0x7f050005;
        public static final int main_songlib_image=0x7f050006;
        public static final int main_tips_image=0x7f050009;
        public static final int message=0x7f05003f;
        public static final int next=0x7f05001b;
        public static final int nowplaying=0x7f05003e;
        public static final int nowplayingtab=0x7f050029;
        public static final int okayButton=0x7f050039;
        public static final int pause=0x7f05001a;
        public static final int play_indicator=0x7f05003d;
        public static final int playlist=0x7f050030;
        public static final int playlisttab=0x7f050028;
        public static final int playpause=0x7f050023;
        public static final int prev=0x7f050019;
        public static final int progress=0x7f05001f;
        public static final int progressContainer=0x7f050037;
        public static final int prompt=0x7f05002d;
        public static final int radio=0x7f05003b;
        public static final int repeat=0x7f050015;
        public static final int sd_icon=0x7f050040;
        public static final int sd_message=0x7f050041;
        public static final int set=0x7f050044;
        public static final int shuffle=0x7f050016;
        public static final int songtab=0x7f050027;
        public static final int spinner=0x7f05001d;
        public static final int textView1=0x7f050035;
        public static final int textView2=0x7f050034;
        public static final int title=0x7f05000d;
        public static final int titleandbuttons=0x7f050020;
        public static final int totaltime=0x7f05001c;
        public static final int trackname=0x7f050014;
        public static final int weeks=0x7f050043;
    }
    public static final class layout {
        public static final int activity_main=0x7f030000;
        public static final int album_appwidget=0x7f030001;
        public static final int audio_player=0x7f030002;
        public static final int audio_player_common=0x7f030003;
        public static final int audiopreview=0x7f030004;
        public static final int buttonbar=0x7f030005;
        public static final int chord_var=0x7f030006;
        public static final int chordvar_listgroup=0x7f030007;
        public static final int chordvar_listitem=0x7f030008;
        public static final int confirm_delete=0x7f030009;
        public static final int create_playlist=0x7f03000a;
        public static final int credits_page=0x7f03000b;
        public static final int edit_track_list_item=0x7f03000c;
        public static final int media_picker_activity=0x7f03000d;
        public static final int media_picker_activity_expanding=0x7f03000e;
        public static final int music_picker=0x7f03000f;
        public static final int music_picker_item=0x7f030010;
        public static final int nowplaying=0x7f030011;
        public static final int query_activity=0x7f030012;
        public static final int scanning=0x7f030013;
        public static final int scanning_nosdcard=0x7f030014;
        public static final int sd_error=0x7f030015;
        public static final int statusbar=0x7f030016;
        public static final int track_list_item=0x7f030017;
        public static final int track_list_item_child=0x7f030018;
        public static final int track_list_item_common=0x7f030019;
        public static final int track_list_item_group=0x7f03001a;
        public static final int weekpicker=0x7f03001b;
    }
    public static final class plurals {
        /**  Toast confirming that song(s) was/were deleted. 
         */
        public static final int NNNtracksdeleted=0x7f090003;
        /**  Toasts after adding song(s) to playlists 
         */
        public static final int NNNtrackstoplaylist=0x7f090004;
        /**  Used in artists list view, indicates how many albums exist for a given artist. 
         */
        public static final int Nalbums=0x7f090002;
        /**  used in various places to indicate there is some number other than one songs for a given artist or album. 
         */
        public static final int Nsongs=0x7f090000;
        /**  shows how many songs on the album are by the selected artist, out of how many total, if those two numbers are different 
         */
        public static final int Nsongscomp=0x7f090001;
    }
    public static final class string {
        /**  Context menu item 
         */
        public static final int add_to_playlist=0x7f08004a;
        /**  Category label on Library screen 
         */
        public static final int albums_menu=0x7f08001d;
        /**  Albums screen title 
         */
        public static final int albums_title=0x7f08001e;
        /**  Do not translate. This is the separator character used when building the string that shows number of albums and songs. 
         */
        public static final int albumsongseparator=0x7f080073;
        /**  All media screen title 
         */
        public static final int all_title=0x7f080024;
        /**  Artist screen title 
         */
        public static final int artists_title=0x7f08001c;
        /**  Category label on Library screen 
         */
        public static final int browse_menu=0x7f080025;
        /**  Text for the "cancel" button in the "delete" and "create playlist" confirmation dialogs 
         */
        public static final int cancel=0x7f08005e;
        public static final int center_click=0x7f080007;
        public static final int chordvar=0x7f080002;
        /**  menu item to clear the current playlist 
         */
        public static final int clear_playlist=0x7f080057;
        /**  Button name when saving a playlist 
         */
        public static final int create_playlist_create_text=0x7f08004f;
        /**  Prompt in dialog when creating a playlist. The user will enter the name of the playlist in a textfield underneath this prompt. 
 Prompt in dialog when creating a playlist and the keyboard is closed. 
         */
        public static final int create_playlist_create_text_prompt=0x7f080070;
        /**  Button name when saving a playlist and the new playlist will overwrite an existing one 
         */
        public static final int create_playlist_overwrite_text=0x7f080050;
        public static final int credit=0x7f080003;
        /**  Delete confirmation dialog when deleting an entire album 
         */
        public static final int delete_album_desc=0x7f080013;
        /**  Delete confirmation dialog when deleting an entire album 
         */
        public static final int delete_album_desc_nosdcard=0x7f080014;
        /**  Delete confirmation dialog when deleting an entire artist 
         */
        public static final int delete_artist_desc=0x7f080011;
        /**  Delete confirmation dialog when deleting an entire artist 
         */
        public static final int delete_artist_desc_nosdcard=0x7f080012;
        /**  Delete confirmation dialog, confirmation button text 
         */
        public static final int delete_confirm_button_text=0x7f080017;
        /**  Menu item that deletes the currently selected item, which might be a single song, or a collection of songs.
         The user will be prompted to confirm before deletion actually takes place 
         */
        public static final int delete_item=0x7f08000e;
        /**  Playlist context menu item to delete the selected playlist. 
         */
        public static final int delete_playlist_menu=0x7f08002a;
        /**  Delete confirmation dialog when deleting a single song 
         */
        public static final int delete_song_desc=0x7f080015;
        /**  Delete confirmation dialog when deleting a single song 
         */
        public static final int delete_song_desc_nosdcard=0x7f080016;
        /**  Do not translate. Duration format for duration >= 1 hour 
         */
        public static final int durationformatlong=0x7f08000a;
        /**  Do not translate. Duration format for duration < 1 hour 
         */
        public static final int durationformatshort=0x7f080009;
        /**  Playlist context menu item to edit the selected playlist 
         */
        public static final int edit_playlist_menu=0x7f08002b;
        /**  Menu text for the item controlling the audio effects panel [CHAR LIMIT=15] 
         */
        public static final int effectspanel=0x7f08006f;
        /**  Toast after selecting an empty playlist 
         */
        public static final int emptyplaylist=0x7f08004e;
        public static final int exitt=0x7f080005;
        /** The fast scroll thumb will show one character from this string depending on the position in the list 
         */
        public static final int fast_scroll_alphabet=0x7f08006d;
        /**  Menu item that takes the user back to the top level screen of the music player 
         */
        public static final int goto_start=0x7f08000b;
        /**  Shown in the music picker while loading the music database. 
         */
        public static final int loading=0x7f080066;
        /**  Activity label. This might show up in the activity-picker 
         */
        public static final int mediapickerlabel=0x7f08005c;
        /**  Activity label. This might show up in the activity-picker 
         */
        public static final int mediaplaybacklabel=0x7f08005a;
        /**  title of contextual music search menu 
         */
        public static final int mediasearch=0x7f080061;
        /**   Title of the music picker activity. 
         */
        public static final int music_picker_title=0x7f08006a;
        /**  Activity label. This might show up in the activity-picker 
         */
        public static final int musicbrowserlabel=0x7f080058;
        /**  Activity label. This might show up in the activity-picker 
         */
        public static final int musicshortcutlabel=0x7f080059;
        /**  Context menu item 
         */
        public static final int new_playlist=0x7f08004c;
        /**  Template for newly created playlist name 
         */
        public static final int new_playlist_name_template=0x7f08004d;
        /**  Title of screen when there are no playlists, or if the SD card is busy 
         */
        public static final int no_playlists_title=0x7f080029;
        /**  Title of screen when there are no songs, or if the SD card is busy 
         */
        public static final int no_tracks_title=0x7f080027;
        /**  Title of screen when there are no videos, or if the SD card is busy 
         */
        public static final int no_videos_title=0x7f080028;
        /**  Used for the 2nd and 3rd line (artist and album) in the notification area item for the music app 
         */
        public static final int notification_artist_album=0x7f080074;
        public static final int nowplay=0x7f080001;
        /**  title of the "current playlist" screen when not in party shuffle mode 
         */
        public static final int nowplaying_title=0x7f08001a;
        /**  used in various places to indicate there is one song for a given artist or album 
         */
        public static final int onesong=0x7f080008;
        /**  Menu item that switches the music player in to party shuffle mode 
         */
        public static final int party_shuffle=0x7f08000c;
        /**  Menu item that switches the music player out of party shuffle mode 
         */
        public static final int party_shuffle_off=0x7f08000d;
        /**  title of the "current playlist" screen when in party shuffle mode
         */
        public static final int partyshuffle_title=0x7f08001b;
        /**  Menu item to play back all the songs in the currently showing list in list order 
         */
        public static final int play_all=0x7f080010;
        /**  Context menu item 
         */
        public static final int play_selection=0x7f080049;
        /**  Shown as a transient message whenever a file fails to play 
         */
        public static final int playback_failed=0x7f08005d;
        /**  Transient popup message shown after deleting a playlist 
         */
        public static final int playlist_deleted_message=0x7f08002d;
        /**  Transient popup message shown after renaming a playlist 
         */
        public static final int playlist_renamed_message=0x7f08002e;
        /**  Category label on Library screen 
         */
        public static final int playlists_menu=0x7f080021;
        /**  Playlists screen title 
         */
        public static final int playlists_title=0x7f080022;
        /**  The name of the pseudo-playlist that holds all the podcasts, shown in list view 
         */
        public static final int podcasts_listitem=0x7f080031;
        /**  The name of the pseudo-playlist that holds all the podcasts, shown in title bar of songs list 
         */
        public static final int podcasts_title=0x7f080032;
        /**  Context menu item 
         */
        public static final int queue=0x7f08004b;
        /**  The name of the pseudo-playlist that holds all the recently added files, shown in list view 
         */
        public static final int recentlyadded=0x7f08002f;
        /**  The name of the pseudo-playlist that holds all the recently added files, shown in title bar of songs list 
         */
        public static final int recentlyadded_title=0x7f080030;
        /**  context menu item to remove the selected item from the playlist 
         */
        public static final int remove_from_playlist=0x7f08005f;
        /**  Prompt in dialog when renaming a playlist, used when the current name the new name are different. The user will enter the new name of the playlist in a textfield underneath this prompt. 
 Prompt in dialog when renaming a playlist, and the entered name is different from the old one. 
         */
        public static final int rename_playlist_diff_prompt=0x7f080072;
        /**  Playlist context menu item to rename the selected playlist
         */
        public static final int rename_playlist_menu=0x7f08002c;
        /**  Prompt in dialog when renaming a playlist, used when the current name and the new name are the same. The user will enter the new name of the playlist in a textfield underneath this prompt. 
 Prompt in dialog when renaming a playlist, and the entered name is the same as the old one. 
         */
        public static final int rename_playlist_same_prompt=0x7f080071;
        /**  Toast after turning repeat all on 
         */
        public static final int repeat_all_notif=0x7f080045;
        /**  Toast after turning single repeat on 
         */
        public static final int repeat_current_notif=0x7f080044;
        /**  Toast after turning repeat off 
         */
        public static final int repeat_off_notif=0x7f080043;
        /**  Individual song context menu item 
         */
        public static final int ringtone_menu=0x7f080046;
        /**  Menu item 
         */
        public static final int ringtone_menu_short=0x7f080047;
        /**  Toast after setting a song as phone ringtone 
         */
        public static final int ringtone_set=0x7f080048;
        /**  menu item to save the current list as a new playlist 
         */
        public static final int save_as_playlist=0x7f080056;
        /**  shown in dialog while the media scanner is starting up 
         */
        public static final int scanning=0x7f080018;
        /**  shown in dialog while the media scanner is starting up 
         */
        public static final int scanning_nosdcard=0x7f080019;
        /**  label underneath icon used to indicate sd card is mounted to your computer via USB 
         */
        public static final int sdcard_busy_message=0x7f080039;
        /**  label underneath icon used to indicate sd card is mounted to your computer via USB 
         */
        public static final int sdcard_busy_message_nosdcard=0x7f08003a;
        /**  label underneath icon used to indicate that the sd card is present, but currently unavailable 
         */
        public static final int sdcard_busy_title=0x7f080037;
        /**  label underneath icon used to indicate that the sd card is present, but currently unavailable 
         */
        public static final int sdcard_busy_title_nosdcard=0x7f080038;
        /**  label underneath icon used to indicate there was an error accessing the sd card 
         */
        public static final int sdcard_error_message=0x7f08003d;
        /**  label underneath icon used to indicate there was an error accessing the sd card 
         */
        public static final int sdcard_error_message_nosdcard=0x7f08003e;
        /**  Title of screen when there was an error accessing the sd card 
         */
        public static final int sdcard_error_title=0x7f08003b;
        /**  Title of screen when there was an error accessing the sd card 
         */
        public static final int sdcard_error_title_nosdcard=0x7f08003c;
        /**  label underneath icon used to indicate that no sd card is present 
         */
        public static final int sdcard_missing_message=0x7f080035;
        /**  label underneath icon used to indicate that no sd card is present 
         */
        public static final int sdcard_missing_message_nosdcard=0x7f080036;
        /**  Title of screen when no sd card is present 
         */
        public static final int sdcard_missing_title=0x7f080033;
        /**  Title of screen when no sd card is present 
         */
        public static final int sdcard_missing_title_nosdcard=0x7f080034;
        /**  Shown in the search box as a hint 
         */
        public static final int search_hint=0x7f08006c;
        /**  The string used to describe Music as a searchable item within system search settings. 
         */
        public static final int search_settings_description=0x7f08006b;
        /**  Library screen, menu item 
         */
        public static final int search_title=0x7f080026;
        /**  Dialog box button 
         */
        public static final int service_start_error_button=0x7f080053;
        /**  Dialog box message 
         */
        public static final int service_start_error_msg=0x7f080052;
        /**  Dialog box title 
         */
        public static final int service_start_error_title=0x7f080051;
        /**  Menu item to play back all the songs in the currently showing list in shuffle mode 
         */
        public static final int shuffle_all=0x7f08000f;
        /**  Toast after turning shuffle off 
         */
        public static final int shuffle_off_notif=0x7f080042;
        /**  Toast after turning shuffle on 
         */
        public static final int shuffle_on_notif=0x7f080041;
        public static final int songlib=0x7f080000;
        /**  Menu in music picker to sort the list by album name. 
         */
        public static final int sort_by_album=0x7f080068;
        /**  Menu in music picker to sort the list by artist name. 
         */
        public static final int sort_by_artist=0x7f080069;
        /**  Menu in music picker to sort the list by track/song name. 
         */
        public static final int sort_by_track=0x7f080067;
        public static final int start_app=0x7f080006;
        /**  shown when connecting to a music stream, before it starts playing 
         */
        public static final int streamloadingtext=0x7f080060;
        public static final int tip=0x7f080004;
        /**  Category label on Library screen 
         */
        public static final int tracks_menu=0x7f08001f;
        /**  Songs screen title 
         */
        public static final int tracks_title=0x7f080020;
        /**  Default name of album that doesn't have a name in the metadata 
         */
        public static final int unknown_album_name=0x7f080040;
        /**  Default name of artist that doesn't have a name in the metadata 
         */
        public static final int unknown_artist_name=0x7f08003f;
        /**  Activity label. This might show up in the activity-picker 
         */
        public static final int videobrowserlabel=0x7f08005b;
        /**  Videos screen title 
         */
        public static final int videos_title=0x7f080023;
        /**  Button name in time span picker 
         */
        public static final int weekpicker_set=0x7f080054;
        /**  Title of time span picker 
         */
        public static final int weekpicker_title=0x7f080055;
        /**  Text shown on widget when first loaded 
         */
        public static final int widget_initial_text=0x7f08006e;
        /**  Shown in the title bar while the list of albums is being retrieved in the background 
         */
        public static final int working_albums=0x7f080063;
        /**  Shown in the title bar while the list of artists is being retrieved in the background 
         */
        public static final int working_artists=0x7f080062;
        /**  Shown in the title bar while the list of playlists is being retrieved in the background 
         */
        public static final int working_playlists=0x7f080065;
        /**  Shown in the title bar while the list of songs is being retrieved in the background 
         */
        public static final int working_songs=0x7f080064;
    }
    public static final class xml {
        public static final int appwidget_info=0x7f040000;
        public static final int searchable=0x7f040001;
    }
    public static final class styleable {
        /** Attributes that can be used with a Circle.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #Circle_circleBackground com.okisum.andoyz:circleBackground}</code></td><td></td></tr>
           <tr><td><code>{@link #Circle_firstChildPosition com.okisum.andoyz:firstChildPosition}</code></td><td></td></tr>
           <tr><td><code>{@link #Circle_isRotating com.okisum.andoyz:isRotating}</code></td><td></td></tr>
           <tr><td><code>{@link #Circle_rotateToCenter com.okisum.andoyz:rotateToCenter}</code></td><td></td></tr>
           <tr><td><code>{@link #Circle_speed com.okisum.andoyz:speed}</code></td><td></td></tr>
           </table>
           @see #Circle_circleBackground
           @see #Circle_firstChildPosition
           @see #Circle_isRotating
           @see #Circle_rotateToCenter
           @see #Circle_speed
         */
        public static final int[] Circle = {
            0x7f010000, 0x7f010001, 0x7f010002, 0x7f010003,
            0x7f010004
        };
        /**
          <p>This symbol is the offset where the {@link com.okisum.andoyz.R.attr#circleBackground}
          attribute's value can be found in the {@link #Circle} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.okisum.andoyz:circleBackground
        */
        public static final int Circle_circleBackground = 0;
        /**
          <p>This symbol is the offset where the {@link com.okisum.andoyz.R.attr#firstChildPosition}
          attribute's value can be found in the {@link #Circle} array.


          <p>Must be one of the following constant values.</p>
<table>
<colgroup align="left" />
<colgroup align="left" />
<colgroup align="left" />
<tr><th>Constant</th><th>Value</th><th>Description</th></tr>
<tr><td><code>East</code></td><td>0</td><td></td></tr>
<tr><td><code>South</code></td><td>90</td><td></td></tr>
<tr><td><code>West</code></td><td>180</td><td></td></tr>
<tr><td><code>North</code></td><td>270</td><td></td></tr>
</table>
          @attr name com.okisum.andoyz:firstChildPosition
        */
        public static final int Circle_firstChildPosition = 1;
        /**
          <p>This symbol is the offset where the {@link com.okisum.andoyz.R.attr#isRotating}
          attribute's value can be found in the {@link #Circle} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.okisum.andoyz:isRotating
        */
        public static final int Circle_isRotating = 3;
        /**
          <p>This symbol is the offset where the {@link com.okisum.andoyz.R.attr#rotateToCenter}
          attribute's value can be found in the {@link #Circle} array.


          <p>Must be a boolean value, either "<code>true</code>" or "<code>false</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.okisum.andoyz:rotateToCenter
        */
        public static final int Circle_rotateToCenter = 2;
        /**
          <p>This symbol is the offset where the {@link com.okisum.andoyz.R.attr#speed}
          attribute's value can be found in the {@link #Circle} array.


          <p>Must be an integer value, such as "<code>100</code>".
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.okisum.andoyz:speed
        */
        public static final int Circle_speed = 4;
        /** Attributes that can be used with a CircleImageView.
           <p>Includes the following attributes:</p>
           <table>
           <colgroup align="left" />
           <colgroup align="left" />
           <tr><th>Attribute</th><th>Description</th></tr>
           <tr><td><code>{@link #CircleImageView_name com.okisum.andoyz:name}</code></td><td></td></tr>
           </table>
           @see #CircleImageView_name
         */
        public static final int[] CircleImageView = {
            0x7f010005
        };
        /**
          <p>This symbol is the offset where the {@link com.okisum.andoyz.R.attr#name}
          attribute's value can be found in the {@link #CircleImageView} array.


          <p>Must be a string value, using '\\;' to escape characters such as '\\n' or '\\uxxxx' for a unicode character.
<p>This may also be a reference to a resource (in the form
"<code>@[<i>package</i>:]<i>type</i>:<i>name</i></code>") or
theme attribute (in the form
"<code>?[<i>package</i>:][<i>type</i>:]<i>name</i></code>")
containing a value of this type.
          @attr name com.okisum.andoyz:name
        */
        public static final int CircleImageView_name = 0;
    };
}
